{"ast":null,"code":"import _slicedToArray from \"/Users/davit/Desktop/AAA/Z-D/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/davit/Desktop/AAA/Z-D/src/views/pages/message/Message.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport { Collapse, Button, CardBody, Card } from 'reactstrap';\nimport useFetch from \"../../../core/useFetch\";\nimport './Message.scss';\n\nvar Message = function Message() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      editMessage = _useState4[0],\n      setEditMessage = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      messageData = _useState6[0],\n      setMessageData = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isOpen = _useState8[0],\n      setIsOpen = _useState8[1];\n\n  var _useFetch = useFetch(\"message\"),\n      get = _useFetch.get;\n\n  useEffect(function () {\n    setLoading(true);\n    get().then(function (data) {\n      setLoading(false);\n      setMessageData(data);\n    });\n  }, []);\n\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }, \"Loading....\");\n  }\n\n  var toggle = function toggle(id) {\n    setIsOpen(id);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: 'message-content',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 12\n    }\n  }, messageData.map(function (item) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'message-button-content',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 32\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      outline: true,\n      color: \"success\",\n      onClick: function onClick() {\n        toggle(item.id);\n\n        if (item.id === isOpen) {\n          toggle(null);\n        }\n      },\n      style: {\n        marginBottom: '1rem'\n      },\n      className: 'search-content-button',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 40\n      }\n    }, item.subject), /*#__PURE__*/React.createElement(\"span\", {\n      className: 'message-button-icon',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 40\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"tim-icons  \".concat(isOpen === item.id ? 'icon-minimal-down' : 'icon-minimal-up'),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 44\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      size: \"sm\",\n      onClick: function onClick() {\n        return setEditMessage(item.id);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"tim-icons icon-pencil\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 40\n      }\n    }))), /*#__PURE__*/React.createElement(Collapse, {\n      isOpen: isOpen === item.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 32\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(CardBody, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 40\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: 'message-content',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 44\n      }\n    }, item.content)))));\n  })));\n};\n\nexport default Message;","map":{"version":3,"sources":["/Users/davit/Desktop/AAA/Z-D/src/views/pages/message/Message.js"],"names":["React","useEffect","useState","Collapse","Button","CardBody","Card","useFetch","Message","loading","setLoading","editMessage","setEditMessage","messageData","setMessageData","isOpen","setIsOpen","get","then","data","toggle","id","map","item","marginBottom","subject","content"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport { Collapse, Button, CardBody, Card } from 'reactstrap';\nimport useFetch from \"../../../core/useFetch\";\nimport './Message.scss';\n\nconst Message = () => {\n    const [loading, setLoading] = useState(false);\n    const [editMessage, setEditMessage] = useState(false);\n    const [messageData, setMessageData] = useState([]);\n    const [isOpen, setIsOpen] = useState(null);\n    const { get } = useFetch(`message`);\n\n    useEffect(() => {\n        setLoading(true)\n        get().then(data => {\n            setLoading(false)\n            setMessageData(data)\n        })\n    }, []);\n\n    if(loading) {\n        return (\n            <div>\n                Loading....\n            </div>\n        )\n    }\n    const toggle = (id) => {\n        setIsOpen(id)\n    }\n    return (\n        <div className=\"content\">\n           <div className={'message-content'}>\n               {\n                   messageData.map(item => {\n                       return (\n                           <div key={item.id}>\n                               <div className={'message-button-content'}>\n                                   <Button\n                                       outline\n                                       color=\"success\"\n                                       onClick={() => {\n                                           toggle(item.id)\n\n                                           if(item.id === isOpen) {\n                                               toggle(null)\n                                           }\n                                       }} style={{ marginBottom: '1rem' }}\n                                       className={'search-content-button'}\n                                   >\n                                       <span>\n                                          {item.subject}\n                                       </span>\n\n                                       {/*icon-minimal-down*/}\n                                       {/*icon-minimal-up*/}\n                                       <span className={'message-button-icon'}>\n                                           <i className={`tim-icons  ${isOpen === item.id ? 'icon-minimal-down': 'icon-minimal-up'}`} />\n                                       </span>\n                                   </Button>\n\n                                   <Button size=\"sm\" onClick={() => setEditMessage(item.id)}>\n                                       <i className={\"tim-icons icon-pencil\"} />\n                                   </Button>\n                               </div>\n\n                               <Collapse isOpen={isOpen === item.id}>\n                                   <Card>\n                                       <CardBody>\n                                           <p className={'message-content'}>\n                                               {\n                                                   item.content\n                                               }\n                                           </p>\n                                       </CardBody>\n                                   </Card>\n                               </Collapse>\n                           </div>\n                       )\n                   })\n               }\n           </div>\n        </div>\n    )\n};\n\nexport default Message;"]},"metadata":{},"sourceType":"module"}