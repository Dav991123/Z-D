{"ast":null,"code":"import _slicedToArray from \"/Users/davit/Desktop/AAA/Z-D/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/davit/Desktop/AAA/Z-D/src/components/Splash/index.js\";\n\nimport React, { memo, useEffect, useContext, Suspense, useState } from 'react';\nimport AdminContext from '../../context/adminContext';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { authLogin } from '../../authLogin/auth';\n\nvar Splash = function Splash(_ref) {\n  var children = _ref.children,\n      history = _ref.history,\n      location = _ref.location;\n  console.log(location.pathname, '>');\n\n  var _useContext = useContext(AdminContext),\n      dispatch = _useContext.dispatch;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  useEffect(function () {\n    var storageData = sessionStorage.getItem('userData');\n\n    if (storageData) {\n      var userData = JSON.parse(storageData);\n\n      if (userData.login === 'admin') {\n        dispatch({\n          type: 'SET_IS_AUTH',\n          payload: true\n        });\n        return setIsLoading(false);\n      } else {\n        history.push('/login');\n        dispatch({\n          type: 'SET_IS_AUTH',\n          payload: false\n        });\n        return setIsLoading(true);\n      }\n    } // if(storageData) {\n    //     const userData = JSON.parse(storageData);\n    //     authLogin(userData).then(resp => {\n    //       if(resp.ok) {\n    //           history.push('/login')\n    //         dispatch({\n    //           type: 'SET_IS_AUTH', payload: true\n    //         })\n    //           setIsLoading(false);\n    //       }\n    //     })\n    // }else {\n    //   setIsLoading(false)\n    // }\n\n\n    setIsLoading(false);\n  }, [dispatch, history]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Loading...\") : /*#__PURE__*/React.createElement(Suspense, {\n    fallback: /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 37\n      }\n    }, \"Loading...\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, children));\n};\n\nexport default withRouter(memo(Splash));","map":{"version":3,"sources":["/Users/davit/Desktop/AAA/Z-D/src/components/Splash/index.js"],"names":["React","memo","useEffect","useContext","Suspense","useState","AdminContext","withRouter","Redirect","authLogin","Splash","children","history","location","console","log","pathname","dispatch","isLoading","setIsLoading","storageData","sessionStorage","getItem","userData","JSON","parse","login","type","payload","push"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,SAAtB,EAAiCC,UAAjC,EAA6CC,QAA7C,EAAuDC,QAAvD,QAAuE,OAAvE;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,UAAT,EAAqBC,QAArB,QAAqC,kBAArC;AACA,SAASC,SAAT,QAA0B,sBAA1B;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,OAAqC;AAAA,MAAlCC,QAAkC,QAAlCA,QAAkC;AAAA,MAAxBC,OAAwB,QAAxBA,OAAwB;AAAA,MAAfC,QAAe,QAAfA,QAAe;AAChDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,QAArB,EAA+B,GAA/B;;AADgD,oBAE3Bb,UAAU,CAACG,YAAD,CAFiB;AAAA,MAExCW,QAFwC,eAExCA,QAFwC;;AAAA,kBAGdZ,QAAQ,CAAC,IAAD,CAHM;AAAA;AAAA,MAGzCa,SAHyC;AAAA,MAG9BC,YAH8B;;AAIhDjB,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMkB,WAAW,GAAGC,cAAc,CAACC,OAAf,CAAuB,UAAvB,CAApB;;AACA,QAAGF,WAAH,EAAgB;AACZ,UAAMG,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWL,WAAX,CAAjB;;AACA,UAAGG,QAAQ,CAACG,KAAT,KAAmB,OAAtB,EAA+B;AAC3BT,QAAAA,QAAQ,CAAC;AACLU,UAAAA,IAAI,EAAE,aADD;AAELC,UAAAA,OAAO,EAAE;AAFJ,SAAD,CAAR;AAIA,eAAOT,YAAY,CAAC,KAAD,CAAnB;AACH,OAND,MAMM;AACFP,QAAAA,OAAO,CAACiB,IAAR,CAAa,QAAb;AACAZ,QAAAA,QAAQ,CAAC;AACLU,UAAAA,IAAI,EAAE,aADD;AAELC,UAAAA,OAAO,EAAE;AAFJ,SAAD,CAAR;AAIA,eAAOT,YAAY,CAAC,IAAD,CAAnB;AACH;AACJ,KAlBW,CAmBZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAA,IAAAA,YAAY,CAAC,KAAD,CAAZ;AAEH,GAnCQ,EAmCN,CAACF,QAAD,EAAWL,OAAX,CAnCM,CAAT;AAqCA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIM,SAAS,gBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADK,gBAKL,oBAAC,QAAD;AAAU,IAAA,QAAQ,eAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,QADL,CAPR,CADJ;AAeH,CAxDD;;AA0DA,eAAeJ,UAAU,CAACN,IAAI,CAACS,MAAD,CAAL,CAAzB","sourcesContent":["import React, { memo, useEffect, useContext, Suspense, useState } from 'react';\nimport AdminContext from '../../context/adminContext';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { authLogin } from '../../authLogin/auth';\n\nconst Splash = ({ children, history, location }) => {\n    console.log(location.pathname, '>')\n    const { dispatch } = useContext(AdminContext);\n    const [isLoading, setIsLoading] = useState(true);\n    useEffect(() => {\n        const storageData = sessionStorage.getItem('userData');\n        if(storageData) {\n            const userData = JSON.parse(storageData);\n            if(userData.login === 'admin') {\n                dispatch({\n                    type: 'SET_IS_AUTH',\n                    payload: true\n                })\n                return setIsLoading(false)\n            }else {\n                history.push('/login')\n                dispatch({\n                    type: 'SET_IS_AUTH',\n                    payload: false\n                })\n                return setIsLoading(true);\n            }\n        }\n        // if(storageData) {\n        //     const userData = JSON.parse(storageData);\n        //     authLogin(userData).then(resp => {\n        //       if(resp.ok) {\n        //           history.push('/login')\n        //         dispatch({\n        //           type: 'SET_IS_AUTH', payload: true\n        //         })\n        //           setIsLoading(false);\n        //       }\n        //     })\n        // }else {\n        //   setIsLoading(false)\n        // }\n        setIsLoading(false)\n\n    }, [dispatch, history]);\n\n    return (\n        <div>\n        {\n            isLoading ? (\n                <div>\n                  Loading...\n                </div>\n            ): (\n                <Suspense fallback={<p>Loading...</p>}>\n                    {children}\n                </Suspense>\n            )\n        }\n    </div>\n    )\n};\n\nexport default withRouter(memo(Splash));"]},"metadata":{},"sourceType":"module"}