{"ast":null,"code":"import _objectSpread from \"/Users/davit/Desktop/AAA/Z-D/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/davit/Desktop/AAA/Z-D/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/davit/Desktop/AAA/Z-D/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/davit/Desktop/AAA/Z-D/src/views/components/EditModal.js\";\n\nimport React, { useEffect, useState } from \"react\";\nimport { Modal, Container, Row, Col, Button } from \"react-bootstrap\";\nimport EditForm from \"./edit-form\";\nimport useFetch from \"../../core/useFetch\";\nvar cardUserDataModel = {\n  id: 0,\n  email: '',\n  name: '',\n  phone: '',\n  surname: ''\n};\n\nvar EditModal = function EditModal(_ref) {\n  var selectedRow = _ref.selectedRow,\n      onRefreshPage = _ref.onRefreshPage,\n      restProps = _objectWithoutProperties(_ref, [\"selectedRow\", \"onRefreshPage\"]);\n\n  var _useFetch = useFetch(\"code\"),\n      get = _useFetch.get;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      codeData = _useState2[0],\n      setCodeData = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedCode = _useState4[0],\n      setSelectedCode = _useState4[1];\n\n  var _useFetch2 = useFetch(\"card\"),\n      put = _useFetch2.put;\n\n  var _useState5 = useState({\n    firstAttachedPerson: cardUserDataModel,\n    owner: cardUserDataModel,\n    secondAttachedPerson: cardUserDataModel\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      values = _useState6[0],\n      setValues = _useState6[1];\n\n  useEffect(function () {\n    get('?attached=true').then(function (data) {\n      setCodeData(data.content);\n    });\n  }, []);\n  useEffect(function () {\n    var pink = selectedRow.pink,\n        selectedData = _objectWithoutProperties(selectedRow, [\"pink\"]);\n\n    if (selectedRow) {\n      setValues(_objectSpread({}, selectedData));\n    }\n  }, [selectedRow]);\n\n  var editCard = function editCard() {\n    put(selectedRow.pin, values).then(function (resp) {\n      console.log(resp, 'resp');\n      restProps.onHide();\n      onRefreshPage();\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Modal, Object.assign({}, restProps, {\n    size: \"lg\",\n    \"aria-labelledby\": \"contained-modal-title\",\n    dialogClassName: \"edit-modal\",\n    backdrop: \"static\",\n    keyboard: false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Modal.Header, {\n    closeButton: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Modal.Title, {\n    id: \"contained-modal-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    className: \"title text-white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Edit Profile\"))), /*#__PURE__*/React.createElement(Modal.Body, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, Object.values(values).length && /*#__PURE__*/React.createElement(EditForm, {\n    values: values,\n    codeData: codeData,\n    handleSave: editCard,\n    handleChange: setValues,\n    selectedCode: selectedCode,\n    setSelectedCode: setSelectedCode,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  })));\n};\n\nexport default EditModal;","map":{"version":3,"sources":["/Users/davit/Desktop/AAA/Z-D/src/views/components/EditModal.js"],"names":["React","useEffect","useState","Modal","Container","Row","Col","Button","EditForm","useFetch","cardUserDataModel","id","email","name","phone","surname","EditModal","selectedRow","onRefreshPage","restProps","get","codeData","setCodeData","selectedCode","setSelectedCode","put","firstAttachedPerson","owner","secondAttachedPerson","values","setValues","then","data","content","pink","selectedData","editCard","pin","resp","console","log","onHide","Object","length"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,GAA3B,EAAgCC,GAAhC,EAAqCC,MAArC,QAAmD,iBAAnD;AAEA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,QAAP,MAAqB,qBAArB;AAEA,IAAMC,iBAAiB,GAAG;AACxBC,EAAAA,EAAE,EAAE,CADoB;AAExBC,EAAAA,KAAK,EAAE,EAFiB;AAGxBC,EAAAA,IAAI,EAAE,EAHkB;AAIxBC,EAAAA,KAAK,EAAE,EAJiB;AAKxBC,EAAAA,OAAO,EAAE;AALe,CAA1B;;AAQA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAgD;AAAA,MAA9CC,WAA8C,QAA9CA,WAA8C;AAAA,MAAjCC,aAAiC,QAAjCA,aAAiC;AAAA,MAAfC,SAAe;;AAAA,kBAChDV,QAAQ,CAAC,MAAD,CADwC;AAAA,MACxDW,GADwD,aACxDA,GADwD;;AAAA,kBAGhClB,QAAQ,CAAC,EAAD,CAHwB;AAAA;AAAA,MAGzDmB,QAHyD;AAAA,MAG/CC,WAH+C;;AAAA,mBAIxBpB,QAAQ,CAAC,EAAD,CAJgB;AAAA;AAAA,MAIzDqB,YAJyD;AAAA,MAI3CC,eAJ2C;;AAAA,mBAKhDf,QAAQ,QALwC;AAAA,MAKxDgB,GALwD,cAKxDA,GALwD;;AAAA,mBAMpCvB,QAAQ,CAAC;AACnCwB,IAAAA,mBAAmB,EAAEhB,iBADc;AAEnCiB,IAAAA,KAAK,EAAEjB,iBAF4B;AAGnCkB,IAAAA,oBAAoB,EAAElB;AAHa,GAAD,CAN4B;AAAA;AAAA,MAMzDmB,MANyD;AAAA,MAMjDC,SANiD;;AAYhE7B,EAAAA,SAAS,CAAC,YAAM;AAEdmB,IAAAA,GAAG,CAAC,gBAAD,CAAH,CAAsBW,IAAtB,CAA2B,UAACC,IAAD,EAAU;AACnCV,MAAAA,WAAW,CAACU,IAAI,CAACC,OAAN,CAAX;AACD,KAFD;AAGD,GALQ,EAKN,EALM,CAAT;AAOAhC,EAAAA,SAAS,CAAC,YAAM;AAAA,QACNiC,IADM,GACoBjB,WADpB,CACNiB,IADM;AAAA,QACGC,YADH,4BACoBlB,WADpB;;AAEd,QAAGA,WAAH,EAAgB;AACda,MAAAA,SAAS,mBAAKK,YAAL,EAAT;AACD;AACF,GALQ,EAKN,CAAClB,WAAD,CALM,CAAT;;AAQA,MAAMmB,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBX,IAAAA,GAAG,CAACR,WAAW,CAACoB,GAAb,EAAkBR,MAAlB,CAAH,CAA6BE,IAA7B,CAAkC,UAAAO,IAAI,EAAI;AACxCC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAAkB,MAAlB;AACAnB,MAAAA,SAAS,CAACsB,MAAV;AACAvB,MAAAA,aAAa;AACd,KAJD;AAKD,GAND;;AAQA,sBACE,oBAAC,KAAD,oBACMC,SADN;AAEE,IAAA,IAAI,EAAC,IAFP;AAGE,uBAAgB,uBAHlB;AAIE,IAAA,eAAe,EAAC,YAJlB;AAKE,IAAA,QAAQ,EAAC,QALX;AAME,IAAA,QAAQ,EAAE,KANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAQE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD,CAAO,KAAP;AAAa,IAAA,EAAE,EAAC,uBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,CARF,eAaE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEIuB,MAAM,CAACb,MAAP,CAAcA,MAAd,EAAsBc,MAAtB,iBACI,oBAAC,QAAD;AACI,IAAA,MAAM,EAAEd,MADZ;AAEI,IAAA,QAAQ,EAAER,QAFd;AAGI,IAAA,UAAU,EAAEe,QAHhB;AAII,IAAA,YAAY,EAAEN,SAJlB;AAKI,IAAA,YAAY,EAAEP,YALlB;AAMI,IAAA,eAAe,EAAEC,eANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHR,CAbF,CADF;AA8BD,CAjED;;AAmEA,eAAeR,SAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { Modal, Container, Row, Col, Button } from \"react-bootstrap\";\n\nimport EditForm from \"./edit-form\";\nimport useFetch from \"../../core/useFetch\";\n\nconst cardUserDataModel = {\n  id: 0,\n  email: '',\n  name: '',\n  phone: '',\n  surname: ''\n}\n\nconst EditModal = ({selectedRow, onRefreshPage, ...restProps}) => {\n  const { get } = useFetch(\"code\");\n\n  const [codeData, setCodeData] = useState([])\n  const [selectedCode, setSelectedCode] = useState('')\n  const { put } = useFetch(`card`);\n  const [values, setValues] = useState({\n    firstAttachedPerson: cardUserDataModel,\n    owner: cardUserDataModel,\n    secondAttachedPerson: cardUserDataModel\n  })\n\n  useEffect(() => {\n\n    get('?attached=true').then((data) => {\n      setCodeData(data.content)\n    })\n  }, []);\n\n  useEffect(() => {\n    const { pink, ...selectedData } = selectedRow;\n    if(selectedRow) {\n      setValues({...selectedData})\n    }\n  }, [selectedRow]);\n\n\n  const editCard = () => {\n    put(selectedRow.pin, values).then(resp => {\n      console.log(resp, 'resp')\n      restProps.onHide();\n      onRefreshPage()\n    })\n  };\n\n  return (\n    <Modal\n      {...restProps}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title\"\n      dialogClassName=\"edit-modal\"\n      backdrop=\"static\"\n      keyboard={false}\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title\">\n          <h5 className=\"title text-white\">Edit Profile</h5>\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {\n          Object.values(values).length && (\n              <EditForm\n                  values={values}\n                  codeData={codeData}\n                  handleSave={editCard}\n                  handleChange={setValues}\n                  selectedCode={selectedCode}\n                  setSelectedCode={setSelectedCode}\n              />\n          )\n        }\n      </Modal.Body>\n    </Modal>\n  );\n};\n\nexport default EditModal;\n"]},"metadata":{},"sourceType":"module"}