{"ast":null,"code":"function Query(methods, options) {\n  this._qs = {};\n  this.options = options || {};\n  var self = this;\n\n  for (var m in methods) {\n    (function (name, method) {\n      self[name] = function (val) {\n        val = method.default && val === undefined ? method.default : val;\n        var q = method.param || name;\n\n        if (\"add\" === method.method) {\n          if (!self._qs[q]) {\n            self._qs[q] = [val];\n          } else {\n            self._qs[q].push(val);\n          }\n        } else {\n          self._qs[q] = val;\n        }\n\n        return self;\n      };\n\n      if (method.alias) {\n        self[method.alias] = self[name];\n      }\n    })(m, methods[m]);\n  }\n}\n\nQuery.prototype.valueOf = function () {\n  var qs = {};\n\n  for (var q in this._qs) {\n    if (this._qs[q] !== null) {\n      qs[q] = this._qs[q];\n    } // if (Array.isArray(qs[q]) && this.options.arrayJoiner) {\n    //   qs[q] = qs[q].join(this.options.arrayJoiner);\n    // }\n\n  }\n\n  return qs;\n};\n\nQuery.prototype.toString = function () {\n  return require(\"querystring\").stringify(this.valueOf());\n};\n\nexport default Query;","map":{"version":3,"sources":["/Users/davit/Desktop/AAA/Z-D/src/core/query-builder.js"],"names":["Query","methods","options","_qs","self","m","name","method","val","default","undefined","q","param","push","alias","prototype","valueOf","qs","toString","require","stringify"],"mappings":"AAAA,SAASA,KAAT,CAAeC,OAAf,EAAwBC,OAAxB,EAAiC;AAC/B,OAAKC,GAAL,GAAW,EAAX;AACA,OAAKD,OAAL,GAAeA,OAAO,IAAI,EAA1B;AAEA,MAAIE,IAAI,GAAG,IAAX;;AAEA,OAAK,IAAIC,CAAT,IAAcJ,OAAd,EAAuB;AACrB,KAAC,UAASK,IAAT,EAAeC,MAAf,EAAuB;AACtBH,MAAAA,IAAI,CAACE,IAAD,CAAJ,GAAa,UAASE,GAAT,EAAc;AACzBA,QAAAA,GAAG,GAAGD,MAAM,CAACE,OAAP,IAAkBD,GAAG,KAAKE,SAA1B,GAAsCH,MAAM,CAACE,OAA7C,GAAuDD,GAA7D;AACA,YAAIG,CAAC,GAAGJ,MAAM,CAACK,KAAP,IAAgBN,IAAxB;;AACA,YAAI,UAAUC,MAAM,CAACA,MAArB,EAA6B;AAC3B,cAAI,CAACH,IAAI,CAACD,GAAL,CAASQ,CAAT,CAAL,EAAkB;AAChBP,YAAAA,IAAI,CAACD,GAAL,CAASQ,CAAT,IAAc,CAACH,GAAD,CAAd;AACD,WAFD,MAEO;AACLJ,YAAAA,IAAI,CAACD,GAAL,CAASQ,CAAT,EAAYE,IAAZ,CAAiBL,GAAjB;AACD;AACF,SAND,MAMO;AACLJ,UAAAA,IAAI,CAACD,GAAL,CAASQ,CAAT,IAAcH,GAAd;AACD;;AAED,eAAOJ,IAAP;AACD,OAdD;;AAgBA,UAAIG,MAAM,CAACO,KAAX,EAAkB;AAChBV,QAAAA,IAAI,CAACG,MAAM,CAACO,KAAR,CAAJ,GAAqBV,IAAI,CAACE,IAAD,CAAzB;AACD;AACF,KApBD,EAoBGD,CApBH,EAoBMJ,OAAO,CAACI,CAAD,CApBb;AAqBD;AACF;;AAEDL,KAAK,CAACe,SAAN,CAAgBC,OAAhB,GAA0B,YAAW;AACnC,MAAIC,EAAE,GAAG,EAAT;;AACA,OAAK,IAAIN,CAAT,IAAc,KAAKR,GAAnB,EAAwB;AACtB,QAAI,KAAKA,GAAL,CAASQ,CAAT,MAAgB,IAApB,EAAyB;AAEvBM,MAAAA,EAAE,CAACN,CAAD,CAAF,GAAQ,KAAKR,GAAL,CAASQ,CAAT,CAAR;AACD,KAJqB,CAKtB;AACA;AACA;;AACD;;AAED,SAAOM,EAAP;AACD,CAbD;;AAeAjB,KAAK,CAACe,SAAN,CAAgBG,QAAhB,GAA2B,YAAW;AACpC,SAAOC,OAAO,CAAC,aAAD,CAAP,CAAuBC,SAAvB,CAAiC,KAAKJ,OAAL,EAAjC,CAAP;AACD,CAFD;;AAIA,eAAehB,KAAf","sourcesContent":["function Query(methods, options) {\n  this._qs = {};\n  this.options = options || {};\n\n  let self = this;\n\n  for (let m in methods) {\n    (function(name, method) {\n      self[name] = function(val) {\n        val = method.default && val === undefined ? method.default : val;\n        let q = method.param || name;\n        if (\"add\" === method.method) {\n          if (!self._qs[q]) {\n            self._qs[q] = [val];\n          } else {\n            self._qs[q].push(val);\n          }\n        } else {\n          self._qs[q] = val;\n        }\n\n        return self;\n      };\n\n      if (method.alias) {\n        self[method.alias] = self[name];\n      }\n    })(m, methods[m]);\n  }\n}\n\nQuery.prototype.valueOf = function() {\n  let qs = {};\n  for (let q in this._qs) {\n    if (this._qs[q] !== null){\n\n      qs[q] = this._qs[q];\n    }\n    // if (Array.isArray(qs[q]) && this.options.arrayJoiner) {\n    //   qs[q] = qs[q].join(this.options.arrayJoiner);\n    // }\n  }\n\n  return qs;\n};\n\nQuery.prototype.toString = function() {\n  return require(\"querystring\").stringify(this.valueOf());\n};\n\nexport default Query;\n"]},"metadata":{},"sourceType":"module"}