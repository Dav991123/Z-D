{"ast":null,"code":"import _objectSpread from \"/Users/davit/Desktop/AAA/Z-D/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"/Users/davit/Desktop/AAA/Z-D/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/davit/Desktop/AAA/Z-D/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/davit/Desktop/AAA/Z-D/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/davit/Desktop/AAA/Z-D/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/davit/Desktop/AAA/Z-D/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/davit/Desktop/AAA/Z-D/src/components/Sidebar/Sidebar.js\";\n\n/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\"; // javascript plugin used to create scrollbars on windows\n\nimport PerfectScrollbar from \"perfect-scrollbar\"; // reactstrap components\n\nimport { Nav, Collapse } from \"reactstrap\";\nvar ps;\n\nvar Sidebar = /*#__PURE__*/function (_React$Component) {\n  _inherits(Sidebar, _React$Component);\n\n  var _super = _createSuper(Sidebar);\n\n  function Sidebar(props) {\n    var _this;\n\n    _classCallCheck(this, Sidebar);\n\n    _this = _super.call(this, props);\n\n    _this.getCollapseStates = function (routes) {\n      var initialState = {};\n      routes.map(function (prop, key) {\n        if (prop.collapse) {\n          initialState = _objectSpread(_objectSpread({\n            [prop.state]: _this.getCollapseInitialState(prop.views)\n          }, _this.getCollapseStates(prop.views)), initialState);\n        }\n\n        return null;\n      });\n      return initialState;\n    };\n\n    _this.createLinks = function (routes) {\n      var rtlActive = _this.props.rtlActive;\n      return routes.map(function (prop, key) {\n        if (prop.redirect) {\n          return null;\n        }\n\n        if (prop.collapse) {\n          var st = {};\n          st[prop[\"state\"]] = !_this.state[prop.state];\n          return /*#__PURE__*/React.createElement(\"li\", {\n            className: _this.getCollapseInitialState(prop.views) ? \"active\" : \"\",\n            key: key,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"a\", {\n            href: \"#pablo\",\n            \"data-toggle\": \"collapse\",\n            \"aria-expanded\": _this.state[prop.state],\n            onClick: function onClick(e) {\n              e.preventDefault();\n\n              _this.setState(st);\n            },\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 13\n            }\n          }, prop.icon !== undefined ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"i\", {\n            className: prop.icon,\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }\n          }), /*#__PURE__*/React.createElement(\"p\", {\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }\n          }, rtlActive ? prop.rtlName : prop.name, /*#__PURE__*/React.createElement(\"b\", {\n            className: \"caret\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }\n          }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n            className: \"sidebar-mini-icon\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }\n          }, rtlActive ? prop.rtlMini : prop.mini), /*#__PURE__*/React.createElement(\"span\", {\n            className: \"sidebar-normal\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 19\n            }\n          }, rtlActive ? prop.rtlName : prop.name, /*#__PURE__*/React.createElement(\"b\", {\n            className: \"caret\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 21\n            }\n          })))), /*#__PURE__*/React.createElement(Collapse, {\n            isOpen: _this.state[prop.state],\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"ul\", {\n            className: \"nav\",\n            __self: _assertThisInitialized(_this),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }\n          }, _this.createLinks(prop.views))));\n        }\n\n        return /*#__PURE__*/React.createElement(\"li\", {\n          className: _this.activeRoute(prop.layout + prop.path),\n          key: key,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(NavLink, {\n          to: prop.layout + prop.path,\n          activeClassName: \"\",\n          onClick: _this.props.closeSidebar,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 11\n          }\n        }, prop.icon !== undefined ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"i\", {\n          className: prop.icon,\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }\n        }, rtlActive ? prop.rtlName : prop.name)) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"span\", {\n          className: \"sidebar-mini-icon\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }\n        }, rtlActive ? prop.rtlMini : prop.mini), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"sidebar-normal\",\n          __self: _assertThisInitialized(_this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }\n        }, rtlActive ? prop.rtlName : prop.name))));\n      });\n    };\n\n    _this.activeRoute = function (routeName) {\n      return _this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n    };\n\n    _this.state = _this.getCollapseStates(props.routes);\n    return _this;\n  } // this creates the intial state of this component based on the collapse routes\n  // that it gets through this.props.routes\n\n\n  _createClass(Sidebar, [{\n    key: \"getCollapseInitialState\",\n    // this verifies if any of the collapses should be default opened on a rerender of this component\n    // for example, on the refresh of the page,\n    // while on the src/views/forms/RegularForms.js - route /admin/regular-forms\n    value: function getCollapseInitialState(routes) {\n      for (var i = 0; i < routes.length; i++) {\n        if (routes[i].collapse && this.getCollapseInitialState(routes[i].views)) {\n          return true;\n        } else if (window.location.href.indexOf(routes[i].path) !== -1) {\n          return true;\n        }\n      }\n\n      return false;\n    } // this function creates the links and collapses that appear in the sidebar (left menu)\n\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // if you are using a Windows Machine, the scrollbars will have a Mac look\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps = new PerfectScrollbar(this.refs.sidebar, {\n          suppressScrollX: true,\n          suppressScrollY: false\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // we need to destroy the false scrollbar when we navigate\n      // to a page that doesn't have this component rendered\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          activeColor = _this$props.activeColor,\n          logo = _this$props.logo;\n      var logoImg = null;\n      var logoText = null;\n\n      if (logo !== undefined) {\n        if (logo.outterLink !== undefined) {\n          logoImg = /*#__PURE__*/React.createElement(\"a\", {\n            href: logo.outterLink,\n            className: \"simple-text logo-mini\",\n            target: \"_blank\",\n            onClick: this.props.closeSidebar,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"logo-img\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: logo.imgSrc,\n            alt: \"react-logo\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }\n          })));\n          logoText = /*#__PURE__*/React.createElement(\"a\", {\n            href: logo.outterLink,\n            className: \"simple-text logo-normal\",\n            target: \"_blank\",\n            onClick: this.props.closeSidebar,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 11\n            }\n          }, logo.text);\n        } else {\n          logoImg = /*#__PURE__*/React.createElement(NavLink, {\n            to: logo.innerLink,\n            className: \"simple-text logo-mini\",\n            onClick: this.props.closeSidebar,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 11\n            }\n          }, /*#__PURE__*/React.createElement(\"div\", {\n            className: \"logo-img\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 13\n            }\n          }, /*#__PURE__*/React.createElement(\"img\", {\n            src: logo.imgSrc,\n            alt: \"react-logo\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 15\n            }\n          })));\n          logoText = /*#__PURE__*/React.createElement(NavLink, {\n            to: logo.innerLink,\n            className: \"simple-text logo-normal\",\n            onClick: this.props.closeSidebar,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 11\n            }\n          }, logo.text);\n        }\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sidebar\",\n        data: activeColor,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"sidebar-wrapper\",\n        ref: \"sidebar\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 9\n        }\n      }, logoImg !== null || logoText !== null ? /*#__PURE__*/React.createElement(\"div\", {\n        className: \"logo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }\n      }, logoImg, logoText) : null, /*#__PURE__*/React.createElement(Nav, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }\n      }, this.createLinks(this.props.routes))));\n    }\n  }]);\n\n  return Sidebar;\n}(React.Component);\n\nSidebar.propTypes = {\n  activeColor: PropTypes.oneOf([\"primary\", \"blue\", \"green\", \"orange\", \"red\"]),\n  rtlActive: PropTypes.bool,\n  routes: PropTypes.array.isRequired,\n  logo: PropTypes.oneOfType([PropTypes.shape({\n    innerLink: PropTypes.string.isRequired,\n    imgSrc: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired\n  }), PropTypes.shape({\n    outterLink: PropTypes.string.isRequired,\n    imgSrc: PropTypes.string.isRequired,\n    text: PropTypes.string.isRequired\n  })]),\n  // this is used on responsive to close the sidebar on route navigation\n  closeSidebar: PropTypes.func\n};\nexport default Sidebar;","map":{"version":3,"sources":["/Users/davit/Desktop/AAA/Z-D/src/components/Sidebar/Sidebar.js"],"names":["React","NavLink","PropTypes","PerfectScrollbar","Nav","Collapse","ps","Sidebar","props","getCollapseStates","routes","initialState","map","prop","key","collapse","state","getCollapseInitialState","views","createLinks","rtlActive","redirect","st","e","preventDefault","setState","icon","undefined","rtlName","name","rtlMini","mini","activeRoute","layout","path","closeSidebar","routeName","location","pathname","indexOf","i","length","window","href","navigator","platform","refs","sidebar","suppressScrollX","suppressScrollY","destroy","activeColor","logo","logoImg","logoText","outterLink","imgSrc","text","innerLink","Component","propTypes","oneOf","bool","array","isRequired","oneOfType","shape","string","func"],"mappings":"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","sourcesContent":["/*eslint-disable*/\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\n// javascript plugin used to create scrollbars on windows\nimport PerfectScrollbar from \"perfect-scrollbar\";\n\n// reactstrap components\nimport { Nav, Collapse } from \"reactstrap\";\n\nvar ps;\n\nclass Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = this.getCollapseStates(props.routes);\n  }\n  // this creates the intial state of this component based on the collapse routes\n  // that it gets through this.props.routes\n  getCollapseStates = routes => {\n    let initialState = {};\n    routes.map((prop, key) => {\n      if (prop.collapse) {\n        initialState = {\n          [prop.state]: this.getCollapseInitialState(prop.views),\n          ...this.getCollapseStates(prop.views),\n          ...initialState\n        };\n      }\n      return null;\n    });\n    return initialState;\n  };\n  // this verifies if any of the collapses should be default opened on a rerender of this component\n  // for example, on the refresh of the page,\n  // while on the src/views/forms/RegularForms.js - route /admin/regular-forms\n  getCollapseInitialState(routes) {\n    for (let i = 0; i < routes.length; i++) {\n      if (routes[i].collapse && this.getCollapseInitialState(routes[i].views)) {\n        return true;\n      } else if (window.location.href.indexOf(routes[i].path) !== -1) {\n        return true;\n      }\n    }\n    return false;\n  }\n  // this function creates the links and collapses that appear in the sidebar (left menu)\n  createLinks = routes => {\n    const { rtlActive } = this.props;\n    return routes.map((prop, key) => {\n      if (prop.redirect) {\n        return null;\n      }\n      if (prop.collapse) {\n        var st = {};\n        st[prop[\"state\"]] = !this.state[prop.state];\n        return (\n          <li\n            className={this.getCollapseInitialState(prop.views) ? \"active\" : \"\"}\n            key={key}\n          >\n            <a\n              href=\"#pablo\"\n              data-toggle=\"collapse\"\n              aria-expanded={this.state[prop.state]}\n              onClick={e => {\n                e.preventDefault();\n                this.setState(st);\n              }}\n            >\n              {prop.icon !== undefined ? (\n                <>\n                  <i className={prop.icon} />\n                  <p>\n                    {rtlActive ? prop.rtlName : prop.name}\n                    <b className=\"caret\" />\n                  </p>\n                </>\n              ) : (\n                <>\n                  <span className=\"sidebar-mini-icon\">\n                    {rtlActive ? prop.rtlMini : prop.mini}\n                  </span>\n                  <span className=\"sidebar-normal\">\n                    {rtlActive ? prop.rtlName : prop.name}\n                    <b className=\"caret\" />\n                  </span>\n                </>\n              )}\n            </a>\n            <Collapse isOpen={this.state[prop.state]}>\n              <ul className=\"nav\">{this.createLinks(prop.views)}</ul>\n            </Collapse>\n          </li>\n        );\n      }\n      return (\n        <li className={this.activeRoute(prop.layout + prop.path)} key={key}>\n          <NavLink\n            to={prop.layout + prop.path}\n            activeClassName=\"\"\n            onClick={this.props.closeSidebar}\n          >\n            {prop.icon !== undefined ? (\n              <>\n                <i className={prop.icon} />\n                <p>{rtlActive ? prop.rtlName : prop.name}</p>\n              </>\n            ) : (\n              <>\n                <span className=\"sidebar-mini-icon\">\n                  {rtlActive ? prop.rtlMini : prop.mini}\n                </span>\n                <span className=\"sidebar-normal\">\n                  {rtlActive ? prop.rtlName : prop.name}\n                </span>\n              </>\n            )}\n          </NavLink>\n        </li>\n      );\n    });\n  };\n  // verifies if routeName is the one active (in browser input)\n  activeRoute = routeName => {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? \"active\" : \"\";\n  };\n  componentDidMount() {\n    // if you are using a Windows Machine, the scrollbars will have a Mac look\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.sidebar, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n    }\n  }\n  componentWillUnmount() {\n    // we need to destroy the false scrollbar when we navigate\n    // to a page that doesn't have this component rendered\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n  }\n  render() {\n    const { activeColor, logo } = this.props;\n    let logoImg = null;\n    let logoText = null;\n    if (logo !== undefined) {\n      if (logo.outterLink !== undefined) {\n        logoImg = (\n          <a\n            href={logo.outterLink}\n            className=\"simple-text logo-mini\"\n            target=\"_blank\"\n            onClick={this.props.closeSidebar}\n          >\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </a>\n        );\n        logoText = (\n          <a\n            href={logo.outterLink}\n            className=\"simple-text logo-normal\"\n            target=\"_blank\"\n            onClick={this.props.closeSidebar}\n          >\n            {logo.text}\n          </a>\n        );\n      } else {\n        logoImg = (\n          <NavLink\n            to={logo.innerLink}\n            className=\"simple-text logo-mini\"\n            onClick={this.props.closeSidebar}\n          >\n            <div className=\"logo-img\">\n              <img src={logo.imgSrc} alt=\"react-logo\" />\n            </div>\n          </NavLink>\n        );\n        logoText = (\n          <NavLink\n            to={logo.innerLink}\n            className=\"simple-text logo-normal\"\n            onClick={this.props.closeSidebar}\n          >\n            {logo.text}\n          </NavLink>\n        );\n      }\n    }\n    return (\n      <div className=\"sidebar\" data={activeColor}>\n        <div className=\"sidebar-wrapper\" ref=\"sidebar\">\n          {logoImg !== null || logoText !== null ? (\n            <div className=\"logo\">\n              {logoImg}\n              {logoText}\n            </div>\n          ) : null}\n          <Nav>{this.createLinks(this.props.routes)}</Nav>\n        </div>\n      </div>\n    );\n  }\n}\n\nSidebar.propTypes = {\n  activeColor: PropTypes.oneOf([\"primary\", \"blue\", \"green\", \"orange\", \"red\"]),\n  rtlActive: PropTypes.bool,\n  routes: PropTypes.array.isRequired,\n  logo: PropTypes.oneOfType([\n    PropTypes.shape({\n      innerLink: PropTypes.string.isRequired,\n      imgSrc: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired\n    }),\n    PropTypes.shape({\n      outterLink: PropTypes.string.isRequired,\n      imgSrc: PropTypes.string.isRequired,\n      text: PropTypes.string.isRequired\n    })\n  ]),\n  // this is used on responsive to close the sidebar on route navigation\n  closeSidebar: PropTypes.func\n};\n\nexport default Sidebar;\n"]},"metadata":{},"sourceType":"module"}