{"ast":null,"code":"import _slicedToArray from \"/Users/davit/Desktop/AAA/Z-D/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"/Users/davit/Desktop/AAA/Z-D/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { parseQuery, combineQuery } from '../core/queryHelper';\n\nvar useQuery = function useQuery() {\n  var data = {};\n\n  if (!window.location.search) {\n    data = {\n      page: '0',\n      size: '5'\n    };\n  } else {\n    data = _objectSpread({}, parseQuery(window.location.search));\n  }\n\n  var _useState = useState(data),\n      _useState2 = _slicedToArray(_useState, 2),\n      queryState = _useState2[0],\n      setQueryState = _useState2[1];\n\n  useEffect(function () {\n    if (window.location.search) {\n      setQueryState(_objectSpread({}, parseQuery(window.location.search)));\n    }\n  }, [window.location.search]);\n  var obj = {\n    query: combineQuery(queryState),\n    queryObject: queryState,\n    setQueryState\n  };\n  return obj;\n};\n\nexport default useQuery;","map":{"version":3,"sources":["/Users/davit/Desktop/AAA/Z-D/src/Hooks/useQuery.js"],"names":["React","useState","useEffect","useCallback","parseQuery","combineQuery","useQuery","data","window","location","search","page","size","queryState","setQueryState","obj","query","queryObject"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAsCC,WAAtC,QAAyD,OAAzD;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,qBAAzC;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnB,MAAIC,IAAI,GAAG,EAAX;;AAGA,MAAG,CAACC,MAAM,CAACC,QAAP,CAAgBC,MAApB,EAA4B;AACxBH,IAAAA,IAAI,GAAG;AACHI,MAAAA,IAAI,EAAE,GADH;AAEHC,MAAAA,IAAI,EAAE;AAFH,KAAP;AAKH,GAND,MAMM;AACFL,IAAAA,IAAI,qBACGH,UAAU,CAACI,MAAM,CAACC,QAAP,CAAgBC,MAAjB,CADb,CAAJ;AAGH;;AAdkB,kBAgBiBT,QAAQ,CAACM,IAAD,CAhBzB;AAAA;AAAA,MAgBZM,UAhBY;AAAA,MAgBAC,aAhBA;;AAiBnBZ,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAGM,MAAM,CAACC,QAAP,CAAgBC,MAAnB,EAA0B;AACtBI,MAAAA,aAAa,mBAAMV,UAAU,CAACI,MAAM,CAACC,QAAP,CAAgBC,MAAjB,CAAhB,EAAb;AACH;AACJ,GAJQ,EAIN,CAACF,MAAM,CAACC,QAAP,CAAgBC,MAAjB,CAJM,CAAT;AAKA,MAAMK,GAAG,GAAG;AACRC,IAAAA,KAAK,EAAEX,YAAY,CAACQ,UAAD,CADX;AAERI,IAAAA,WAAW,EAAEJ,UAFL;AAGRC,IAAAA;AAHQ,GAAZ;AAKA,SAAOC,GAAP;AACH,CA5BD;;AA6BA,eAAeT,QAAf","sourcesContent":["import React, { useState, useEffect , useCallback } from 'react';\nimport { parseQuery, combineQuery } from '../core/queryHelper';\n\nconst useQuery = () => {\n    let data = {\n\n    }\n    if(!window.location.search) {\n        data = {\n            page: '0',\n            size: '5'\n        };\n\n    }else {\n        data = {\n            ...parseQuery(window.location.search)\n        }\n    }\n\n    const [queryState, setQueryState] = useState(data);\n    useEffect(() => {\n        if(window.location.search){\n            setQueryState(({...parseQuery(window.location.search)}))\n        }\n    }, [window.location.search]);\n    const obj = {\n        query: combineQuery(queryState),\n        queryObject: queryState,\n        setQueryState\n    };\n    return obj\n};\nexport default useQuery;"]},"metadata":{},"sourceType":"module"}